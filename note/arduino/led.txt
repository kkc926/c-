---------------------여러 개의 LED 점등하기

int pins[] = {3, 5, 7, 9};
int state = 0;
void setup() { //딱 한번 호출됨// 주로 pinMode를 설정하거나 통신 모듈을 설정함
Serial.begin(9600); //Serial은 전역변수로 어디서든 쓸 수있음
for(int i=0; i<4; i++) {
pinMode(pins[i], OUTPUT);
digitalWrite(pins[i], LOW);
}
}

void loop() {
for(int i=0; i<4; i++) {
if(i==state) {
Serial.print("0 "); //출력후 줄바꿈 없음 , 띄어쓰기를 한 이유는 0 x x x 로 구성되도록 하려고(별이유는없음)
digitalWrite(pins[i], HIGH);//on
} else {
Serial.print("X ");
digitalWrite(pins[i], LOW);//off
}
}
Serial.println(); // 출력후 줄바꿈
state = (state + 1) % 4;//0,1,2,3 순환
delay(1000);
}

----------------------시리얼 입력으로 led켜고 끄기
int pin_LED = 13;//기판에 있는 led와도 연결된 포트
void setup() {
Serial.begin(9600);
pinMode(pin_LED, OUTPUT);
}
void loop() {
if(Serial.available()) { ///pc에서 수신된 데이터(serial 입력창에 입력하여 전송한 데이터)가있는지 확인 있으면 트루 없으면 false //
char inChar = Serial.read();//데이터를 읽는 함수 read(); 입력은 read() 출력은 print()
if(inChar == '\r' || inChar == '\n') return;//글자가 개행문자면 return;
if(inChar == '1') {//일반문자 '1'이면 킴
digitalWrite(pin_LED, HIGH);
} else {
digitalWrite(pin_LED, LOW);
}
}
}


----------------------지연함수 없이 점등하기
int pin_LED = 13;
boolean LED_state = false;
unsigned long time_previous, time_current;
unsigned long count = 0;
void setup()
{
    pinMode(pin_LED, OUTPUT);
    digitalWrite(pin_LED, LED_state);
    Serial.begin(9600);
    time_previous = millis(); //기준시간
}
void loop()
{
    time_current = millis(); //현재시간
    count++;
    // 1초 이상 시간이 경과한 경우
    if (time_current - time_previous >= 1000) //현재시간-과거시간
    {
        time_previous = time_current; //기준시간 변경
        LED_state = !LED_state;
        digitalWrite(pin_LED, LED_state);
        Serial.println(count);
        count = 0;
    }
}
------------------------ delay함수안쓰고 블링크하는법 time_current=millis();, time_previous=millis(); 이용
컴퓨터가 시간을 previous 함수에 기록
루프에 들어감
current는 매번 시간을 확인함

현재-예전차이 >= 1000이 넘으면 if문, 아니면 다시 루프
false로 설정한 led_status가 true가되면서 라이트 켜짐
현재-예전차이 >= 1000이 넘으면 if문
true였던 led_status가 false가 되면서 라이트 꺼짐.
즉 1000(설정한 숫자)의 시간에따라 점멸됨


#include <SimpleTimer.h>
int pin_LED1 = 3;
int pin_LED2 = 5;
int pin_LED3 = 7; 

SimpleTimer timer;

void blink_1000(){
    int state = digitalRead(pin_LED1); //현재 led가 켜져있으면 1을 state에 리턴해줌 꺼져있으면 0을 리턴
    digitalWrite(pin_LED1, !state);// 위의 값을 바꿔줌 켜있었으면 끔, 꺼있었으면 킴
}

void blink_500(){
int state = digitalRead(pin_LED2);
    digitalWrite(pin_LED2, !state);

}
void blink_200(){
int state = digitalRead(pin_LED3);
    digitalWrite(pin_LED3, !state);

}

void setup(){
    pinMode(pin_LED1, OUTPUT);
    pinMode(pin_LED2, OUTPUT);
    pinMode(pin_LED3, OUTPUT);
    timer.setInterval(1000,blink_1000);
    timer.setInterval(500,blink_500);
    timer.setInterval(200,blink_200);

}

 void loop(){
    timer.run();
 }

------- led 밝기조절

전압을 조절하여 밝기를 조절한다
○ analogWrite(핀 번호，전압)

int pin_LED1 = 3;
int pin_LED2 = 5;
int pin_LED3 = 6;

void setup(){
    pinMode(pin_LED1, OUTPUT);
    pinMode(pin_LED2, OUTPUT);
    pinMode(pin_LED3, OUTPUT);

}

void loop(){
    for(int i =0; i<= 255; i++){
        analogWrite(pin_LED1,i); //i->255
        delay(20);
    }
    for(int i=255; i>=0; i--){
        analogWrite(pin_LED1, i); //255->0
        delay(20);
    }
    for(int i =0; i<= 255; i++){
        analogWrite(pin_LED2,i); //i->255
        delay(20);
    }
    for(int i=255; i>=0; i--){
        analogWrite(pin_LED2, i); //255->0
        delay(20);
    }
    for(int i =0; i<= 255; i++){
        analogWrite(pin_LED3,i); //i->255
        delay(20);
    }
    for(int i=255; i>=0; i--){
        analogWrite(pin_LED3, i); //255->0
        delay(20);
    }


}